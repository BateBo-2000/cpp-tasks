https://github.com/xKrashx/Object_Oriented_Programming/tree/main/Seminar/Week%2001#%D0%B4%D0%BE%D0%BC%D0%B0%D1%88%D0%BD%D0%BE
Задача 1: Въвежда се цяло число N и после N тригъгълника в равнината, определени от 3 точки(6 координати). Отпечатайте тригълниците сортирани по лицата им.

Input Format
На първият ред се въвежда цяло число N, на следващите N реда се въвеждат по 6 цели числа, координатите на триъгълника.

Constraints
1 <= N <= 1000
-100 <= xi, yi <= 100
Output Format
Да се принтират лицата на всички триъгълници, сортирани в нарастващ ред и разделени с един интервал.

Sample Input
3
0 0 1 0 0 1
7 1 4 6 0 2
0 8 5 5 5 4
Sample Output
0.5 2.5 16
Explanation
Първият триъгълник има лице 0.5, вторият има лице 16, а третият има лице 2.5. И в сортиран вид са 0.5, 2.5, 16.

Задача 2: Реализирайте структура, която моделира квадратно уравнение. Квадратното уравнение се дефинира с 3 коефициента a, b, c, които са произвилни реални числа. Напишете методи за изчисление на решенията ако има реални такива.

Input Format
На първият ред се въвеждат 3 реални числа a, b и c.

Constraints
-100 <= a, b, c <= 100
Output Format
На един ред на стандартният изход, да се изкара едно то следните три неща, в зависимост от решението на квадратното уравнение: - Няма корени -> "The equation does not have real solutions!" - Има 2 еднакви корена -> x1 = x2 = "{корен}" - Има 2 различни корена -> x1 = "{корен 1}", x2 = "{корен 2}" В последният случай нека x1 < x2.

Sample Input 0
1 -3 2
Sample Output 0
x1 = 1, x2 = 2
Explanation 0
Ако решим квадратното уравниение x^2-3x+2=0 и получаваме корените 1 и 2.

Sample Input 1
-60 -3 -59
Sample Output 1
The equation does not have real solutions!

Sample Input 2
1 4 4
Sample Output 2
x1 = x2 = -2
Задача 3: Да се създаде структура която представя комплексно число. Създайте функции, които събира, изваждат и умножават две комплексни числа. Създайте подходяща функция за извеждане принтиране на комплексни числа.

Input Format
На първият ред на стандартният вход на стандартният вход, ще бъдат подадени 4 цели числа a, b, c, d, коефициентите на комплексните числа(z1 = a + bi, z2 = c + di).

Constraints
-1000 <= a, b, c, d <= 1000
Output Format
На стандартният изход да се изпечатат резултатите от 3те операции събиране, изваждане и умножение на двете числа. Всеки резултат да е на нов ред.

Sample Input 0
6 -4 10 7
Sample Output 0
16+3i
-4-11i
88+2i
Sample Input 1
-7 0 9 0
Sample Output 1
2
-16
-63
Sample Input 2
5 0 5 5
Sample Output 2
10+5i
-5i
25+25i
Задача 4: Създайте структура описваща студент. Всеки студент се определя чрез факултетен номер, курс и средна оценка за курса. Всеки студент е в първи, втори, трети или четвърти курс. Факултетните номера винаги са петцифрени цели числа. Създайте подходящо параметризирана функция initStudent(...);, която въвежда коректни данни за студент. Да се напише функция, която принтира студент.

Създайте структура описваща група. Една група се състои от N на брой студенти. Структурата също така трябва да пази средния успех на групата. Напишете функция, която приема група и минимален успех за стипендия, и връща колко студента ще получават стипендия.

Input Format
На първият ред на стандартният вход се въвежда цяло число N, броят на студентите в групата. На следващите N реда се въвеждат факлутетен номер, курс и средна оценка, разделени с един интервал. На последният ред на входа се въвежда минималният успех за стипендия.

Constraints
1 <= N <= 500
10000 <= факлутетен номер < 100000
1 <= курс <= 4
2 <= оценка <= 6
Output Format
На стандартният изход да се изпечата две числа разделени с един интервал. Първо да се изпечата средният успех на групата и след него броят студенти, които ще получат стипендия.

Sample Input 0
5
38613 3 2.492
12494 3 5.568
18935 4 2.436
35935 2 4.184
28215 1 4.696
4.902
Sample Output 0
3.8752 1
Sample Input 1
10
17176 4 2.58
30502 4 3.4
10589 4 3.192
38710 3 5.984
17297 1 4.068
19393 3 4.648
40766 1 4.768
39741 4 5.272
28383 4 5.628
29548 3 3.456
5.312
Sample Output 1
4.2996 2
